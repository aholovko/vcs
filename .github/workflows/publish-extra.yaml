#
# Copyright SecureKey Technologies Inc. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

name: release-extra
on:
  pull_request:
jobs:
  mock-webhook:
    name: Publish image
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

#      - name: Login to Github Container Registry
#        uses: docker/login-action@v3
#        with:
#          registry: ghcr.io
#          username: ${{ secrets.CR_USER }}
#          password: ${{ secrets.CR_PAT }}

      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./images/mocks/webhook/Dockerfile
          platforms: linux/amd64
          build-args: |
            GO_IMAGE=golang
            ALPINE_VER=3.18
            GO_VER=1.21
            ALPINE_IMAGE=alpine
          push: false
          tags: |
            ghcr.io/trustbloc/mock-webhook:latest
  mock-login-consent:
    name: Publish image
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      #      - name: Login to Github Container Registry
      #        uses: docker/login-action@v3
      #        with:
      #          registry: ghcr.io
      #          username: ${{ secrets.CR_USER }}
      #          password: ${{ secrets.CR_PAT }}

      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./images/mocks/loginconsent/Dockerfile
          platforms: linux/amd64
          build-args: |
            GO_IMAGE=golang
            ALPINE_VER=3.18
            GO_VER=1.21
            ALPINE_IMAGE=alpine
          push: false
          tags: |
            ghcr.io/trustbloc/mock-login-consent:latest
  mock-trustregistry:
    name: Publish image
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      #      - name: Login to Github Container Registry
      #        uses: docker/login-action@v3
      #        with:
      #          registry: ghcr.io
      #          username: ${{ secrets.CR_USER }}
      #          password: ${{ secrets.CR_PAT }}

      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./images/mocks/trustregistry/Dockerfile
          platforms: linux/amd64
          build-args: |
            GO_IMAGE=golang
            ALPINE_VER=3.18
            GO_VER=1.21
            ALPINE_IMAGE=alpine
          push: false
          tags: |
            ghcr.io/trustbloc/mock-trustregistry-docker:latest
  mock-attestation:
    name: Publish image
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      #      - name: Login to Github Container Registry
      #        uses: docker/login-action@v3
      #        with:
      #          registry: ghcr.io
      #          username: ${{ secrets.CR_USER }}
      #          password: ${{ secrets.CR_PAT }}

      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./images/mocks/attestation/Dockerfile
          platforms: linux/amd64
          build-args: |
            GO_IMAGE=golang
            ALPINE_VER=3.18
            GO_VER=1.21
            ALPINE_IMAGE=alpine
          push: false
          tags: |
            ghcr.io/trustbloc/mock-attestation:latest

  mock-cognito-auth:
    name: Publish image
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      #      - name: Login to Github Container Registry
      #        uses: docker/login-action@v3
      #        with:
      #          registry: ghcr.io
      #          username: ${{ secrets.CR_USER }}
      #          password: ${{ secrets.CR_PAT }}

      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./images/mocks/cognito-auth/Dockerfile
          platforms: linux/amd64
          build-args: |
            GO_IMAGE=golang
            ALPINE_VER=3.18
            GO_VER=1.21
            ALPINE_IMAGE=alpine
          push: false
          tags: |
            ghcr.io/trustbloc/mock-cognito-auth:latest